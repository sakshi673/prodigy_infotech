//HTML

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Weather App</title>
  <link rel="stylesheet" href="style.css" />
</head>
<body>

  <div class="card">
    <div class="search">
      <input type="text" id="city-input" placeholder="Enter city name" spellcheck="false" />
      <button id="search-btn">
        <img src="images/search.png" alt="Search" />
      </button>
    </div>

    <div class="weather">
      <img src="images/rain.png" class="weather-icon" alt="Weather Icon" />
      <h1 class="temp">--°C</h1>
      <h2 class="city">City Name</h2>

      <div class="details">
        <div class="col">
          <img src="images/humidity.png" alt="Humidity" />
          <div>
            <p class="humidity">--%</p>
            <p>Humidity</p>
          </div>
        </div>
        <div class="col">
          <img src="images/wind.png" alt="Wind Speed" />
          <div>
            <p class="wind">-- km/h</p>
            <p>Wind Speed</p>
          </div>
        </div>
      </div>
    </div>
  </div>

  <script>
    const apikey = "592312ce5489d92f36520f1446deaa27";
    const apiUrl = "https://api.openweathermap.org/data/2.5/weather?units=metric&q=";

    const searchBox = document.getElementById("city-input");
    const searchBtn = document.getElementById("search-btn");

    async function checkWeather(city) {
      try {
        const response = await fetch(`${apiUrl}${city}&appid=${apikey}`);

        if (response.status === 404) {
          alert("City not found. Please try again.");
          return;
        }

        const data = await response.json();
        console.log(data);

        document.querySelector(".city").innerHTML = data.name;
        document.querySelector(".temp").innerHTML = Math.round(data.main.temp) + "°C";
        document.querySelector(".humidity").innerHTML = data.main.humidity + "%";
        document.querySelector(".wind").innerHTML = data.wind.speed + " km/h";

        const weatherIcon = document.querySelector(".weather-icon");
        const mainWeather = data.weather[0].main;

        if (mainWeather === "Clouds") {
          weatherIcon.src = "images/clouds.png";
        } else if (mainWeather === "Clear") {
          weatherIcon.src = "images/clear.png";
        } else if (mainWeather === "Rain") {
          weatherIcon.src = "images/rain.png";
        } else if (mainWeather === "Drizzle") {
          weatherIcon.src = "images/drizzle.png";
        } else if (mainWeather === "Mist") {
          weatherIcon.src = "images/mist.png";
        } else {
          weatherIcon.src = "images/default.png"; // fallback icon
        }

      } catch (error) {
        console.error("Error fetching weather:", error);
        alert("Failed to fetch weather. Check your internet connection.");
      }
    }

    searchBtn.addEventListener("click", () => {
      const city = searchBox.value.trim();
      if (city !== "") {
        checkWeather(city);
      }
    });
  </script>
</body>
</html>

//CSS

body {
  font-family: 'Arial', sans-serif;
  background: linear-gradient(to right, #00c6ff, #FFA500);
  min-height: 100vh;
  margin: 0;
  display: flex;
  justify-content: center;
  align-items: center;
}

.card {
  width: 90%;
  max-width: 470px;
  background: linear-gradient(135deg, #00feba, #5b548a);
  color: #fff;
  margin: 100px auto 0;
  border-radius: 20px;
  padding: 40px 35px;
  text-align: center;
}

.search {
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.search input {
  padding: 10px 15px;
  height: 60px;
  margin-left: 10px;
  background: #ebfffc;
  color: #555;
  border: 0;
  outline: 0;
  border-radius: 30px;
  flex: 1;
  margin-right: 16px;
  font-size: 18px;
}

.search button {
  border: 0;
  outline: 0;
  background: #ebfffc;
  border-radius: 50%;
  width: 80px;
  height: 80px;
  cursor: pointer;
}

.search button img {
  width: 16px;
}

.weather-icon {
  width: 170px;
  margin-top: 30px;
}

.weather h1 {
  font-size: 80px;
  font-weight: 500;
  margin-top: -10px;
}

.weather h2 {
  font-size: 45px;
  font-weight: 400;
  margin-top: -10px;
}

.details {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0 20px;
  margin-top: 50px;
}

.col {
  display: flex;
  align-items: center;
  text-align: left;
}

.col img {
  width: 40px;
  margin-right: 10px;
}

.humidity, .wind  {
  font-size: 28px;
  margin-top: -6px;
}

//Java script

<script>
  const apikey = "592312ce5489d92f36520f1446deaa27";
  const apiUrl = "https://api.openweathermap.org/data/2.5/weather?units=metric&q=";

  const searchBox = document.getElementById("city-input");
  const searchBtn = document.getElementById("search-btn");

  async function checkWeather(city) {
    const response = await fetch(`${apiUrl}${city}&appid=${apikey}`);

    if (response.status === 404) {
      alert("City not found");
      return;
    }

    const data = await response.json();
    console.log(data);

    document.querySelector(".city").innerHTML = data.name;
    document.querySelector(".temp").innerHTML = Math.round(data.main.temp) + "°C";
    document.querySelector(".humidity").innerHTML = data.main.humidity + "%";
    document.querySelector(".wind").innerHTML = data.wind.speed + " km/h";

    // Change weather icon dynamically based on weather condition
    const weatherIcon = document.querySelector(".weather-icon");
    if (data.weather[0].main === "Clouds") {
      weatherIcon.src = "images/clouds.png";
    } else if (data.weather[0].main === "Clear") {
      weatherIcon.src = "images/clear.png";
    } else if (data.weather[0].main === "Rain") {
      weatherIcon.src = "images/rain.png";
    } else if (data.weather[0].main === "Drizzle") {
      weatherIcon.src = "images/drizzle.png";
    } else if (data.weather[0].main === "Mist") {
      weatherIcon.src = "images/mist.png";
    }
  }

  searchBtn.addEventListener("click", () => {
    const city = searchBox.value.trim();
    if (city !== "") {
      checkWeather(city);
    }
  });
</script>



